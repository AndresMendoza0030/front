{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Work Station\\\\Documents\\\\fyarepo-frontend\\\\frontend\\\\src\\\\pages\\\\UserModal.js\",\n  _s = $RefreshSig$();\n// src/components/UserModal.js\n\nimport React, { useState, useEffect } from 'react';\nimport './UserPermissions.css';\nimport { useAuth } from '../context/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserModal = ({\n  user,\n  permissions = [],\n  roles = [],\n  closeModal\n}) => {\n  _s();\n  const {\n    token\n  } = useAuth();\n\n  // Aseguramos que 'permissions' y 'roles' son arrays\n  permissions = Array.isArray(permissions) ? permissions : [];\n  roles = Array.isArray(roles) ? roles : [];\n  const [selectedPermissions, setSelectedPermissions] = useState([]);\n  const [selectedRoles, setSelectedRoles] = useState([]);\n  useEffect(() => {\n    var _user$permissions, _user$roles;\n    // Actualiza el estado si el usuario cambia\n    setSelectedPermissions(((_user$permissions = user.permissions) === null || _user$permissions === void 0 ? void 0 : _user$permissions.map(permission => permission.id)) || []);\n    setSelectedRoles(((_user$roles = user.roles) === null || _user$roles === void 0 ? void 0 : _user$roles.map(role => role.id)) || []);\n  }, [user]);\n  const handlePermissionChange = permissionId => {\n    if (selectedPermissions.includes(permissionId)) {\n      setSelectedPermissions(selectedPermissions.filter(id => id !== permissionId));\n    } else {\n      setSelectedPermissions([...selectedPermissions, permissionId]);\n    }\n  };\n  const handleRoleChange = roleId => {\n    roleId = parseInt(roleId);\n    if (selectedRoles.includes(roleId)) {\n      setSelectedRoles(selectedRoles.filter(id => id !== roleId));\n    } else {\n      setSelectedRoles([...selectedRoles, roleId]);\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const currentPermissions = user.permissions.map(permission => permission.id);\n      const currentRoles = user.roles.map(role => role.id);\n\n      // Permisos para asignar y revocar\n      const permissionsToAssign = selectedPermissions.filter(id => !currentPermissions.includes(id));\n      const permissionsToRevoke = currentPermissions.filter(id => !selectedPermissions.includes(id));\n\n      // Roles para asignar y revocar\n      const rolesToAssign = selectedRoles.filter(id => !currentRoles.includes(id));\n      const rolesToRevoke = currentRoles.filter(id => !selectedRoles.includes(id));\n\n      // Asignar permisos\n      for (const permissionId of permissionsToAssign) {\n        await fetch('http://fya-api.com:80/api/assign-permission', {\n          method: 'POST',\n          headers: {\n            'Authorization': `Bearer ${token}`,\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            user_id: user.id,\n            permission_id: permissionId\n          })\n        });\n      }\n\n      // Revocar permisos\n      for (const permissionId of permissionsToRevoke) {\n        await fetch('http://fya-api.com:80/api/revoke-permission', {\n          method: 'POST',\n          headers: {\n            'Authorization': `Bearer ${token}`,\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            user_id: user.id,\n            permission_id: permissionId\n          })\n        });\n      }\n\n      // Asignar roles\n      for (const roleId of rolesToAssign) {\n        await fetch('http://fya-api.com:80/api/assign-role-to-user', {\n          method: 'POST',\n          headers: {\n            'Authorization': `Bearer ${token}`,\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            user_id: user.id,\n            role_id: roleId\n          })\n        });\n      }\n\n      // Revocar roles\n      for (const roleId of rolesToRevoke) {\n        await fetch('http://fya-api.com:80/api/revoke-role-to-user', {\n          method: 'POST',\n          headers: {\n            'Authorization': `Bearer ${token}`,\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            user_id: user.id,\n            role_id: roleId\n          })\n        });\n      }\n      closeModal(); // Cerrar el modal despuÃ©s de actualizar\n    } catch (error) {\n      console.error('Error al actualizar permisos o roles del usuario:', error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal\",\n    style: {\n      display: 'block'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"close\",\n        onClick: closeModal,\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Actualizar Permisos y Roles de Usuario\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-label\",\n            children: \"Roles:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            multiple: true,\n            value: selectedRoles,\n            onChange: e => {\n              const options = e.target.options;\n              const selected = [];\n              for (let i = 0; i < options.length; i++) {\n                if (options[i].selected) {\n                  selected.push(parseInt(options[i].value));\n                }\n              }\n              setSelectedRoles(selected);\n            },\n            className: \"form-control\",\n            children: roles.map(role => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: role.id,\n              children: role.name.replace(/_/g, ' ').replace(/\\b\\w/g, c => c.toUpperCase())\n            }, role.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-label\",\n            children: \"Permisos de Sistema:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"permissions-list\",\n            children: permissions.map(permission => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"permission-item\",\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  checked: selectedPermissions.includes(permission.id),\n                  onChange: () => handlePermissionChange(permission.id)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 159,\n                  columnNumber: 41\n                }, this), permission.name.replace(/_/g, ' ').replace(/\\b\\w/g, c => c.toUpperCase())]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 37\n              }, this)\n            }, permission.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"submit-button\",\n          children: \"Actualizar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 9\n  }, this);\n};\n_s(UserModal, \"frjmZFLi0ggwbX5DE+hRW/ApjLI=\", false, function () {\n  return [useAuth];\n});\n_c = UserModal;\nexport default UserModal;\nvar _c;\n$RefreshReg$(_c, \"UserModal\");","map":{"version":3,"names":["React","useState","useEffect","useAuth","jsxDEV","_jsxDEV","UserModal","user","permissions","roles","closeModal","_s","token","Array","isArray","selectedPermissions","setSelectedPermissions","selectedRoles","setSelectedRoles","_user$permissions","_user$roles","map","permission","id","role","handlePermissionChange","permissionId","includes","filter","handleRoleChange","roleId","parseInt","handleSubmit","e","preventDefault","currentPermissions","currentRoles","permissionsToAssign","permissionsToRevoke","rolesToAssign","rolesToRevoke","fetch","method","headers","body","JSON","stringify","user_id","permission_id","role_id","error","console","message","className","style","display","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","multiple","value","onChange","options","target","selected","i","length","push","name","replace","c","toUpperCase","type","checked","_c","$RefreshReg$"],"sources":["C:/Users/Work Station/Documents/fyarepo-frontend/frontend/src/pages/UserModal.js"],"sourcesContent":["// src/components/UserModal.js\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport './UserPermissions.css';\r\nimport { useAuth } from '../context/AuthContext';\r\n\r\nconst UserModal = ({ user, permissions = [], roles = [], closeModal }) => {\r\n    const { token } = useAuth();\r\n\r\n    // Aseguramos que 'permissions' y 'roles' son arrays\r\n    permissions = Array.isArray(permissions) ? permissions : [];\r\n    roles = Array.isArray(roles) ? roles : [];\r\n\r\n    const [selectedPermissions, setSelectedPermissions] = useState([]);\r\n    const [selectedRoles, setSelectedRoles] = useState([]);\r\n\r\n    useEffect(() => {\r\n        // Actualiza el estado si el usuario cambia\r\n        setSelectedPermissions(user.permissions?.map(permission => permission.id) || []);\r\n        setSelectedRoles(user.roles?.map(role => role.id) || []);\r\n    }, [user]);\r\n\r\n    const handlePermissionChange = (permissionId) => {\r\n        if (selectedPermissions.includes(permissionId)) {\r\n            setSelectedPermissions(selectedPermissions.filter(id => id !== permissionId));\r\n        } else {\r\n            setSelectedPermissions([...selectedPermissions, permissionId]);\r\n        }\r\n    };\r\n\r\n    const handleRoleChange = (roleId) => {\r\n        roleId = parseInt(roleId);\r\n        if (selectedRoles.includes(roleId)) {\r\n            setSelectedRoles(selectedRoles.filter(id => id !== roleId));\r\n        } else {\r\n            setSelectedRoles([...selectedRoles, roleId]);\r\n        }\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        try {\r\n            const currentPermissions = user.permissions.map(permission => permission.id);\r\n            const currentRoles = user.roles.map(role => role.id);\r\n\r\n            // Permisos para asignar y revocar\r\n            const permissionsToAssign = selectedPermissions.filter(id => !currentPermissions.includes(id));\r\n            const permissionsToRevoke = currentPermissions.filter(id => !selectedPermissions.includes(id));\r\n\r\n            // Roles para asignar y revocar\r\n            const rolesToAssign = selectedRoles.filter(id => !currentRoles.includes(id));\r\n            const rolesToRevoke = currentRoles.filter(id => !selectedRoles.includes(id));\r\n\r\n            // Asignar permisos\r\n            for (const permissionId of permissionsToAssign) {\r\n                await fetch('http://fya-api.com:80/api/assign-permission', {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Authorization': `Bearer ${token}`,\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                    body: JSON.stringify({\r\n                        user_id: user.id,\r\n                        permission_id: permissionId,\r\n                    }),\r\n                });\r\n            }\r\n\r\n            // Revocar permisos\r\n            for (const permissionId of permissionsToRevoke) {\r\n                await fetch('http://fya-api.com:80/api/revoke-permission', {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Authorization': `Bearer ${token}`,\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                    body: JSON.stringify({\r\n                        user_id: user.id,\r\n                        permission_id: permissionId,\r\n                    }),\r\n                });\r\n            }\r\n\r\n            // Asignar roles\r\n            for (const roleId of rolesToAssign) {\r\n                await fetch('http://fya-api.com:80/api/assign-role-to-user', {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Authorization': `Bearer ${token}`,\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                    body: JSON.stringify({\r\n                        user_id: user.id,\r\n                        role_id: roleId,\r\n                    }),\r\n                });\r\n            }\r\n\r\n            // Revocar roles\r\n            for (const roleId of rolesToRevoke) {\r\n                await fetch('http://fya-api.com:80/api/revoke-role-to-user', {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Authorization': `Bearer ${token}`,\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                    body: JSON.stringify({\r\n                        user_id: user.id,\r\n                        role_id: roleId,\r\n                    }),\r\n                });\r\n            }\r\n\r\n            closeModal(); // Cerrar el modal despuÃ©s de actualizar\r\n        } catch (error) {\r\n            console.error('Error al actualizar permisos o roles del usuario:', error.message);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"modal\" style={{ display: 'block' }}>\r\n            <div className=\"modal-content\">\r\n                <span className=\"close\" onClick={closeModal}>&times;</span>\r\n                <h2>Actualizar Permisos y Roles de Usuario</h2>\r\n                <form onSubmit={handleSubmit}>\r\n                    {/* Campo de selecciÃ³n de roles */}\r\n                    <div className=\"form-group\">\r\n                        <label className=\"form-label\">Roles:</label>\r\n                        <select\r\n                            multiple\r\n                            value={selectedRoles}\r\n                            onChange={(e) => {\r\n                                const options = e.target.options;\r\n                                const selected = [];\r\n                                for (let i = 0; i < options.length; i++) {\r\n                                    if (options[i].selected) {\r\n                                        selected.push(parseInt(options[i].value));\r\n                                    }\r\n                                }\r\n                                setSelectedRoles(selected);\r\n                            }}\r\n                            className=\"form-control\"\r\n                        >\r\n                            {roles.map((role) => (\r\n                                <option key={role.id} value={role.id}>\r\n                                    {role.name.replace(/_/g, ' ').replace(/\\b\\w/g, c => c.toUpperCase())}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n                    </div>\r\n                    {/* Lista de permisos */}\r\n                    <div className=\"form-group\">\r\n                        <label className=\"form-label\">Permisos de Sistema:</label>\r\n                        <div className=\"permissions-list\">\r\n                            {permissions.map((permission) => (\r\n                                <div key={permission.id} className=\"permission-item\">\r\n                                    <label>\r\n                                        <input\r\n                                            type=\"checkbox\"\r\n                                            checked={selectedPermissions.includes(permission.id)}\r\n                                            onChange={() => handlePermissionChange(permission.id)}\r\n                                        />\r\n                                        {permission.name.replace(/_/g, ' ').replace(/\\b\\w/g, c => c.toUpperCase())}\r\n                                    </label>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                    <button type=\"submit\" className=\"submit-button\">Actualizar</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UserModal;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}