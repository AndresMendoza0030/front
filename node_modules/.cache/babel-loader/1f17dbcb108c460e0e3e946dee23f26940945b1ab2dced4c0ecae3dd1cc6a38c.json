{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Work Station\\\\Documents\\\\fyarepo-frontend\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// PasswordRecovery.js\n\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom'; // Usamos useNavigate en lugar de useHistory\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PasswordRecovery = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [message, setMessage] = useState('');\n  const [error, setError] = useState('');\n  const navigate = useNavigate(); // Hook para manejar la navegación\n\n  const handlePasswordRecovery = async e => {\n    e.preventDefault();\n    console.log('handlePasswordRecovery function called');\n    try {\n      const requestUrl = 'http://fya-api.com:80/api/password-recovery';\n      const requestOptions = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email\n        })\n      };\n      console.log('Sending request to:', requestUrl);\n      console.log('Request options:', requestOptions);\n      const response = await fetch(requestUrl, requestOptions);\n      console.log('Response status:', response.status);\n      console.log('Response status text:', response.statusText);\n      const data = await response.json();\n      console.log('Response data:', data);\n      if (response.ok) {\n        // Mostrar el mensaje de éxito\n        setMessage(data.message || 'Correo de recuperación enviado.');\n        setError('');\n        console.log('Success message set:', data.message);\n      } else {\n        // Manejar errores de la API\n        setError(data.message || 'Error al solicitar la recuperación de contraseña.');\n        setMessage('');\n        console.log('Error message set:', data.message);\n      }\n    } catch (error) {\n      console.error('Error en la petición:', error);\n      setError('Error al conectar con el servidor.');\n      setMessage('');\n    }\n  };\n\n  // Función para redirigir al login\n  const handleBackToLogin = () => {\n    navigate('/login'); // Redirige al login\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"password-recovery-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Recuperaci\\xF3n de Contrase\\xF1a\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handlePasswordRecovery,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        name: \"email\",\n        placeholder: \"Correo electr\\xF3nico\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Enviar Enlace de Recuperaci\\xF3n\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"success-message\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 25\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleBackToLogin,\n      className: \"back-to-login\",\n      children: \"\\u2B05 Volver al Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n};\n_s(PasswordRecovery, \"kbUjxRiVtJ+ARM7fX8c+V53TtDs=\", false, function () {\n  return [useNavigate];\n});\n_c = PasswordRecovery;\nexport default PasswordRecovery;\nvar _c;\n$RefreshReg$(_c, \"PasswordRecovery\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","PasswordRecovery","_s","email","setEmail","message","setMessage","error","setError","navigate","handlePasswordRecovery","e","preventDefault","console","log","requestUrl","requestOptions","method","headers","body","JSON","stringify","response","fetch","status","statusText","data","json","ok","handleBackToLogin","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","name","placeholder","value","onChange","target","required","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Work Station/Documents/fyarepo-frontend/frontend/src/App.js"],"sourcesContent":["// PasswordRecovery.js\n\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom'; // Usamos useNavigate en lugar de useHistory\n\nconst PasswordRecovery = () => {\n    const [email, setEmail] = useState('');\n    const [message, setMessage] = useState('');\n    const [error, setError] = useState('');\n    const navigate = useNavigate(); // Hook para manejar la navegación\n\n    const handlePasswordRecovery = async (e) => {\n        e.preventDefault();\n        console.log('handlePasswordRecovery function called');\n\n        try {\n            const requestUrl = 'http://fya-api.com:80/api/password-recovery';\n            const requestOptions = {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({ email }),\n            };\n\n            console.log('Sending request to:', requestUrl);\n            console.log('Request options:', requestOptions);\n\n            const response = await fetch(requestUrl, requestOptions);\n\n            console.log('Response status:', response.status);\n            console.log('Response status text:', response.statusText);\n\n            const data = await response.json();\n            console.log('Response data:', data);\n\n            if (response.ok) {\n                // Mostrar el mensaje de éxito\n                setMessage(data.message || 'Correo de recuperación enviado.');\n                setError('');\n                console.log('Success message set:', data.message);\n            } else {\n                // Manejar errores de la API\n                setError(data.message || 'Error al solicitar la recuperación de contraseña.');\n                setMessage('');\n                console.log('Error message set:', data.message);\n            }\n        } catch (error) {\n            console.error('Error en la petición:', error);\n            setError('Error al conectar con el servidor.');\n            setMessage('');\n        }\n    };\n\n    // Función para redirigir al login\n    const handleBackToLogin = () => {\n        navigate('/login'); // Redirige al login\n    };\n\n    return (\n        <div className=\"password-recovery-container\">\n            <h1>Recuperación de Contraseña</h1>\n            <form onSubmit={handlePasswordRecovery}>\n                <input\n                    type=\"email\"\n                    name=\"email\"\n                    placeholder=\"Correo electrónico\"\n                    value={email}\n                    onChange={(e) => setEmail(e.target.value)}\n                    required\n                />\n                <button type=\"submit\">Enviar Enlace de Recuperación</button>\n            </form>\n            {message && <p className=\"success-message\">{message}</p>}\n            {error && <p className=\"error-message\">{error}</p>}\n\n            {/* Botón para regresar al login */}\n            <button onClick={handleBackToLogin} className=\"back-to-login\">\n                ⬅ Volver al Login\n            </button>\n        </div>\n    );\n};\n\nexport default PasswordRecovery;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}