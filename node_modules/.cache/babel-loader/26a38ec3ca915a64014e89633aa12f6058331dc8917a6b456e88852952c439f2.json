{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Work Station\\\\Documents\\\\fyarepo-frontend\\\\frontend\\\\src\\\\pages\\\\UserModal.js\",\n  _s = $RefreshSig$();\n// src/components/UserModal.js\nimport React, { useState, useEffect } from 'react';\nimport './UserPermissions.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserModal = ({\n  user,\n  roles = [],\n  folders = [],\n  closeModal\n}) => {\n  _s();\n  const [role, setRole] = useState((user === null || user === void 0 ? void 0 : user.role) || '');\n  const [selectedFolders, setSelectedFolders] = useState((user === null || user === void 0 ? void 0 : user.folders) || []);\n  useEffect(() => {\n    // Actualiza el estado si el usuario cambia\n    setRole((user === null || user === void 0 ? void 0 : user.role) || '');\n    setSelectedFolders((user === null || user === void 0 ? void 0 : user.folders) || []);\n  }, [user]);\n  const handleFolderChange = e => {\n    const value = Array.from(e.target.selectedOptions, option => option.value);\n    setSelectedFolders(value);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Aquí puedes implementar la lógica para actualizar el rol y los permisos del usuario\n    try {\n      const response = await fetch('/api/updateUserPermissions', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username: user.username,\n          role: role,\n          folders: selectedFolders\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        console.log('Usuario actualizado:', data);\n        // Aquí podrías agregar lógica para actualizar el estado en el componente padre si es necesario\n        closeModal(); // Cerrar el modal después de actualizar\n      } else {\n        console.error('Error al actualizar usuario:', data.message);\n      }\n    } catch (error) {\n      console.error('Error al actualizar usuario:', error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal\",\n    style: {\n      display: 'block'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"close\",\n        onClick: closeModal,\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Actualizar Rol y Permisos de Usuario\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"role\",\n            className: \"form-label\",\n            children: \"Rol:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"role\",\n            name: \"role\",\n            className: \"form-control\",\n            value: role,\n            onChange: e => setRole(e.target.value),\n            children: roles.map(role => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: role,\n              children: role\n            }, role, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"folders\",\n            className: \"form-label\",\n            children: \"Permisos de Carpetas:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"folders\",\n            name: \"folders\",\n            className: \"form-control\",\n            multiple: true,\n            value: selectedFolders,\n            onChange: handleFolderChange,\n            children: folders.map(folder => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: folder,\n              children: folder\n            }, folder, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"submit-button\",\n          children: \"Actualizar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n};\n_s(UserModal, \"KBxZ5+A3FLqExfnX/5kro/IEmYE=\");\n_c = UserModal;\nexport default UserModal;\nvar _c;\n$RefreshReg$(_c, \"UserModal\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","UserModal","user","roles","folders","closeModal","_s","role","setRole","selectedFolders","setSelectedFolders","handleFolderChange","e","value","Array","from","target","selectedOptions","option","handleSubmit","preventDefault","response","fetch","method","headers","body","JSON","stringify","username","data","json","ok","console","log","error","message","className","style","display","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","id","name","onChange","map","multiple","folder","type","_c","$RefreshReg$"],"sources":["C:/Users/Work Station/Documents/fyarepo-frontend/frontend/src/pages/UserModal.js"],"sourcesContent":["// src/components/UserModal.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport './UserPermissions.css';\r\n\r\nconst UserModal = ({ user, roles = [], folders = [], closeModal }) => {\r\n    const [role, setRole] = useState(user?.role || '');\r\n    const [selectedFolders, setSelectedFolders] = useState(user?.folders || []);\r\n\r\n    useEffect(() => {\r\n        // Actualiza el estado si el usuario cambia\r\n        setRole(user?.role || '');\r\n        setSelectedFolders(user?.folders || []);\r\n    }, [user]);\r\n\r\n    const handleFolderChange = (e) => {\r\n        const value = Array.from(\r\n            e.target.selectedOptions,\r\n            (option) => option.value\r\n        );\r\n        setSelectedFolders(value);\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        \r\n        // Aquí puedes implementar la lógica para actualizar el rol y los permisos del usuario\r\n        try {\r\n            const response = await fetch('/api/updateUserPermissions', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    username: user.username,\r\n                    role: role,\r\n                    folders: selectedFolders,\r\n                }),\r\n            });\r\n\r\n            const data = await response.json();\r\n            if (response.ok) {\r\n                console.log('Usuario actualizado:', data);\r\n                // Aquí podrías agregar lógica para actualizar el estado en el componente padre si es necesario\r\n                closeModal(); // Cerrar el modal después de actualizar\r\n            } else {\r\n                console.error('Error al actualizar usuario:', data.message);\r\n            }\r\n        } catch (error) {\r\n            console.error('Error al actualizar usuario:', error.message);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"modal\" style={{ display: 'block' }}>\r\n            <div className=\"modal-content\">\r\n                <span className=\"close\" onClick={closeModal}>&times;</span>\r\n                <h2>Actualizar Rol y Permisos de Usuario</h2>\r\n                <form onSubmit={handleSubmit}>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"role\" className=\"form-label\">Rol:</label>\r\n                        <select\r\n                            id=\"role\"\r\n                            name=\"role\"\r\n                            className=\"form-control\"\r\n                            value={role}\r\n                            onChange={(e) => setRole(e.target.value)}\r\n                        >\r\n                            {roles.map((role) => (\r\n                                <option key={role} value={role}>{role}</option>\r\n                            ))}\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"folders\" className=\"form-label\">Permisos de Carpetas:</label>\r\n                        <select\r\n                            id=\"folders\"\r\n                            name=\"folders\"\r\n                            className=\"form-control\"\r\n                            multiple\r\n                            value={selectedFolders}\r\n                            onChange={handleFolderChange}\r\n                        >\r\n                            {folders.map((folder) => (\r\n                                <option key={folder} value={folder}>{folder}</option>\r\n                            ))}\r\n                        </select>\r\n                    </div>\r\n                    <button type=\"submit\" className=\"submit-button\">Actualizar</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UserModal;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}