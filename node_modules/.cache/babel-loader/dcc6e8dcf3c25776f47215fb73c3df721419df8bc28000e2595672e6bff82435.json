{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Work Station\\\\Documents\\\\fyarepo-frontend\\\\frontend\\\\src\\\\pages\\\\Login.js\",\n  _s = $RefreshSig$();\n// Login.js\n\nimport React, { useState, useEffect } from 'react';\nimport { GoogleOAuthProvider, GoogleLogin } from '@react-oauth/google';\nimport { useAuth } from '../context/AuthContext';\nimport { usePermissions } from '../context/PermissionsContext';\nimport { useNavigate } from 'react-router-dom';\nimport PasswordRecovery from './PasswordRecovery';\nimport './Login.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const {\n    login\n  } = useAuth(); // Hook para manejar el inicio de sesión\n  const {\n    setPermissions\n  } = usePermissions();\n  const navigate = useNavigate(); // Hook para navegación\n  const [showPasswordRecovery, setShowPasswordRecovery] = useState(false); // Nuevo estado\n\n  useEffect(() => {\n    document.body.classList.add('login-page');\n    return () => {\n      document.body.classList.remove('login-page');\n    };\n  }, []);\n  const handleLogin = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch('http://fya-api.com:80/api/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      const data = await response.json();\n      console.log('Datos recibidos del servidor:', data);\n      if (response.ok) {\n        const {\n          token,\n          user,\n          permissions\n        } = data.data;\n        setPermissions(permissions); // Establece los permisos\n        login(user.role, token, user.name); // Establece el rol, el token y el nombre de usuario en el contexto\n        navigate('/dashboard'); // Redirigir al usuario al dashboard\n      } else {\n        throw new Error(data.message || 'Error al iniciar sesión');\n      }\n    } catch (error) {\n      console.error('Error al iniciar sesión:', error.message);\n      alert('Error al iniciar sesión, verifica tus credenciales');\n    }\n  };\n  const handleGoogleSuccess = async response => {\n    try {\n      const idToken = response.credential;\n      const result = await fetch('https://fya-api.com:8443/api/login/google', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          idToken\n        })\n      });\n      const data = await result.json();\n      console.log('Datos recibidos del servidor (Google):', data);\n      if (result.ok && data.data.token) {\n        const {\n          token,\n          user,\n          permissions\n        } = data.data;\n        setPermissions(permissions);\n        login(user.role, token, user.name); // Establece el rol, el token y el nombre de usuario en el contexto\n        navigate('/dashboard');\n      } else {\n        throw new Error('Error al autenticar con la API');\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      alert('Error al iniciar sesión con Google');\n    }\n  };\n  const handleGoogleFailure = error => {\n    console.error('Error:', error);\n    alert('Error al iniciar sesión con Google');\n  };\n\n  // Función para mostrar el formulario de recuperación de contraseña\n  const handlePasswordRecovery = () => {\n    setShowPasswordRecovery(true); // Muestra el formulario de recuperación\n  };\n  return /*#__PURE__*/_jsxDEV(GoogleOAuthProvider, {\n    clientId: \"TU_CLIENT_ID_DE_GOOGLE\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-container\",\n      children: showPasswordRecovery ? /*#__PURE__*/_jsxDEV(PasswordRecovery, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"images/logo.webp\",\n          alt: \"Logo de la Organizaci\\xF3n\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Bienvenid@ al Portal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Inicio de Sesi\\xF3n\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleLogin,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            name: \"email\",\n            placeholder: \"Correo electr\\xF3nico\",\n            value: email,\n            onChange: e => setEmail(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            name: \"password\",\n            placeholder: \"Contrase\\xF1a\",\n            value: password,\n            onChange: e => setPassword(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Iniciar Sesi\\xF3n\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(GoogleLogin, {\n          onSuccess: handleGoogleSuccess,\n          onFailure: handleGoogleFailure\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handlePasswordRecovery,\n            className: \"link-button\",\n            children: \"\\xBFOlvid\\xF3 su contrase\\xF1a?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 9\n  }, this);\n};\n_s(Login, \"uaOmifsRZLPTGncy4iOVQK178eo=\", false, function () {\n  return [useAuth, usePermissions, useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useEffect","GoogleOAuthProvider","GoogleLogin","useAuth","usePermissions","useNavigate","PasswordRecovery","jsxDEV","_jsxDEV","Fragment","_Fragment","Login","_s","email","setEmail","password","setPassword","login","setPermissions","navigate","showPasswordRecovery","setShowPasswordRecovery","document","body","classList","add","remove","handleLogin","e","preventDefault","response","fetch","method","headers","JSON","stringify","data","json","console","log","ok","token","user","permissions","role","name","Error","message","error","alert","handleGoogleSuccess","idToken","credential","result","handleGoogleFailure","handlePasswordRecovery","clientId","children","className","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","onSubmit","type","placeholder","value","onChange","target","required","onSuccess","onFailure","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Work Station/Documents/fyarepo-frontend/frontend/src/pages/Login.js"],"sourcesContent":["// Login.js\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { GoogleOAuthProvider, GoogleLogin } from '@react-oauth/google';\r\nimport { useAuth } from '../context/AuthContext';\r\nimport { usePermissions } from '../context/PermissionsContext';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport PasswordRecovery from './PasswordRecovery';\r\nimport './Login.css';\r\n\r\nconst Login = () => {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const { login } = useAuth(); // Hook para manejar el inicio de sesión\r\n    const { setPermissions } = usePermissions();\r\n    const navigate = useNavigate(); // Hook para navegación\r\n    const [showPasswordRecovery, setShowPasswordRecovery] = useState(false); // Nuevo estado\r\n\r\n    useEffect(() => {\r\n        document.body.classList.add('login-page');\r\n        return () => {\r\n            document.body.classList.remove('login-page');\r\n        };\r\n    }, []);\r\n\r\n    const handleLogin = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            const response = await fetch('http://fya-api.com:80/api/login', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({ email, password }),\r\n            });\r\n\r\n            const data = await response.json();\r\n            console.log('Datos recibidos del servidor:', data);\r\n\r\n            if (response.ok) {\r\n                const { token, user, permissions } = data.data;\r\n                setPermissions(permissions); // Establece los permisos\r\n                login(user.role, token, user.name); // Establece el rol, el token y el nombre de usuario en el contexto\r\n                navigate('/dashboard'); // Redirigir al usuario al dashboard\r\n            } else {\r\n                throw new Error(data.message || 'Error al iniciar sesión');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error al iniciar sesión:', error.message);\r\n            alert('Error al iniciar sesión, verifica tus credenciales');\r\n        }\r\n    };\r\n\r\n    const handleGoogleSuccess = async (response) => {\r\n        try {\r\n            const idToken = response.credential;\r\n\r\n            const result = await fetch('https://fya-api.com:8443/api/login/google', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({ idToken }),\r\n            });\r\n\r\n            const data = await result.json();\r\n\r\n            console.log('Datos recibidos del servidor (Google):', data);\r\n\r\n            if (result.ok && data.data.token) {\r\n                const { token, user, permissions } = data.data;\r\n                setPermissions(permissions);\r\n                login(user.role, token, user.name); // Establece el rol, el token y el nombre de usuario en el contexto\r\n                navigate('/dashboard');\r\n            } else {\r\n                throw new Error('Error al autenticar con la API');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error:', error);\r\n            alert('Error al iniciar sesión con Google');\r\n        }\r\n    };\r\n\r\n    const handleGoogleFailure = (error) => {\r\n        console.error('Error:', error);\r\n        alert('Error al iniciar sesión con Google');\r\n    };\r\n\r\n    // Función para mostrar el formulario de recuperación de contraseña\r\n    const handlePasswordRecovery = () => {\r\n        setShowPasswordRecovery(true); // Muestra el formulario de recuperación\r\n    };\r\n\r\n    return (\r\n        <GoogleOAuthProvider clientId=\"TU_CLIENT_ID_DE_GOOGLE\">\r\n            <div className=\"login-container\">\r\n                {showPasswordRecovery ? (\r\n                    <PasswordRecovery />\r\n                ) : (\r\n                    <>\r\n                        <img src=\"images/logo.webp\" alt=\"Logo de la Organización\" />\r\n                        <h1>Bienvenid@ al Portal</h1>\r\n                        <p>Inicio de Sesión</p>\r\n                        <form onSubmit={handleLogin}>\r\n                            <input\r\n                                type=\"email\"\r\n                                name=\"email\"\r\n                                placeholder=\"Correo electrónico\"\r\n                                value={email}\r\n                                onChange={(e) => setEmail(e.target.value)}\r\n                                required\r\n                            />\r\n                            <input\r\n                                type=\"password\"\r\n                                name=\"password\"\r\n                                placeholder=\"Contraseña\"\r\n                                value={password}\r\n                                onChange={(e) => setPassword(e.target.value)}\r\n                                required\r\n                            />\r\n                            <button type=\"submit\">Iniciar Sesión</button>\r\n                        </form>\r\n                        <GoogleLogin\r\n                            onSuccess={handleGoogleSuccess}\r\n                            onFailure={handleGoogleFailure}\r\n                        />\r\n                        <p>\r\n                            <button\r\n                                onClick={handlePasswordRecovery}\r\n                                className=\"link-button\"\r\n                            >\r\n                                ¿Olvidó su contraseña?\r\n                            </button>\r\n                        </p>\r\n                    </>\r\n                )}\r\n            </div>\r\n        </GoogleOAuthProvider>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}